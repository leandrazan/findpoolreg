% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/loglik_fun.R
\name{fit_local_scaling_gev}
\alias{fit_local_scaling_gev}
\title{Fit spatial scale-GEV-model allowing for a local scaling factor to data}
\usage{
fit_local_scaling_gev(
  data,
  temp.cov,
  method = "BFGS",
  maxiter = 300,
  returnRatios = TRUE,
  start_vals = NULL
)
}
\arguments{
\item{data}{A matrix or dataframe representing the data, where each column corresponds to one site.}

\item{temp.cov}{Values of the temporal covariate of the scale-GEV-model.
Must be of same record length as thr observations.}

\item{method}{Method passed to \code{\link[stats]{optim}}.}

\item{maxiter}{Maximum number of iterations during maximisation (also passed to
\code{\link[stats]{optim}}).}

\item{returnRatios}{logical: when TRUE, location-scale- and trend-location-parameter ratios are returned,
when FALSE, the plain parameters are returned.}

\item{start_vals}{Optional: matrix containing start values for the ML optimisation.}
}
\value{
A list containing the estimated parameter values in \code{mle} and the value of the negative log-likelihood and a convergence code
}
\description{
Fit spatial scale-GEV-model allowing for a local scaling factor to data
}
\examples{
# generate some data
xx <- (1:3)*matrix(rep(exp((1:100)/100), 3)*evd::rgev(300), ncol = 3)


# fit spatial scale-GEV-model with homogeneity constraint

## return global parameters, i.e. ratios of location/scale and trend/location
fit_local_scaling_gev(data = xx, temp.cov = (1:100)/100, returnRatios = TRUE)$mle

## return local parameters, i.e. location, scale, shape and trend for each station
fit_local_scaling_gev(data = xx, temp.cov = (1:100)/100, returnRatios = FALSE)$mle

}
